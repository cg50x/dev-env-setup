
MY_HOME=$1
if [ "$MY_HOME" == "" ]; then
	echo "Must specify home directory and user"
	exit 1
fi
shift
MY_USER=$1
if [ "$MY_USER" == "" ]; then
	echo "Must specify user"
	exit 1
fi
shift

SUDO=$(which sudo 2> /dev/null)
HEADER_LEADER=-

printHeader() {
	HEADER_LEADER=$2
	echo
	echo -e "\e[35m-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\e[0m"
	echo -e "\e[35m${1}\e[0m"
	echo
}

printSubHeader() {
	echo
	echo -e "\e[36m-------------------------------------------------------------------------------------------------------------------------------------------\e[0m"
	echo -e "\e[36m${HEADER_LEADER}: ${1}\e[0m"
	echo
}

resetPermissions() {
	printSubHeader "Reseeting permissions (${MY_USER}:${MY_USER})"
	$SUDO chown -R ${MY_USER}:${MY_USER} ${MY_HOME}
	#echo -e "\e[33mSkipping resetting of permissions\e[0m"
}

#scheduleForNextRun() {
#	echo "Scheduling $1 to run at ${MY_HOME}/.onstart..."
#	cleanBoot
#	echo "$1" > ${MY_HOME}/.onstart
#	echo ". ~/.execute_onstart" >> ${MY_HOME}/.profile
#
#	cat <<EOF >> ${MY_HOME}/.execute_onstart
#
##ls -la ~
##date >> ~/log.txt
##echo \$\$ \$BASHPID >> ~/log.txt
##ps aux >> ~/log.txt
##echo PS1 = $PS1 >> ~/log.txt
##echo -- = \$- >> ~/log.txt
##fd=0
##if [ -t "\$fd" ]; then
##	echo fd >> ~/log.txt
##else
##	echo no fd >> ~/log.txt
##fi
##set >> ~/log.txt
##env >> ~/log.txt
##echo "" >> ~/log.txt
#
#if [ -f ~/.onstart ]; then
#	let INTERACTIVE=0
#	#echo -- = \$-
#	case \$- in
#	*i*)
#		INTERACTIVE=1
#		;;
#	*)
#		if [ -t 0 ]; then
#		#	echo t = 1
#			INTERACTIVE=1
#		#else
#		#	echo t = 0
#		fi
#		;;
#	esac
#	#echo INTERACTIVE = \${INTERACTIVE}
#	if [ "\${INTERACTIVE}" == "1" ]; then
#		CMD=\`cat ~/.onstart\`
#		SUDO=\$(which sudo 2> /dev/null)
#		rm -f ~/.onstart
#		echo "Executing command: \$CMD \$HOME `whoami`"
#		if [ "\$SUDO" == "" ]; then
#			read -p 'Press [Enter] key to continue...'
#		fi
#		\$CMD \$HOME `whoami`
#		CMD=
#		SUDO=
#	#else
#	#	echo Detected .onstart, but not an interactive shell.
#	fi
#else
#	echo "No .onstart"
#fi
#
#EOF
##	echo -e "\e[35m-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\e[0m"
##	cat ${MY_HOME}/.profile
##	echo -e "\e[35m-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\e[0m"
##	ls -la ${MY_HOME}
##	echo -e "\e[35m-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\e[0m"
#}

failRetry() {
	echo $1 >&2
	exit 1
}

retry() {
	local n=1
	# retry for 10 seconds at 2-second intervals
	local max=5
	local delay=2
	while true; do
		"$@" && break || {
			if [[ $n -lt $max ]]; then
				((n++))
				echo "!!! Command failed. Attempt $n/$max; sleeping for ${delay}s !!!"
				sleep $delay;
			else
				fail "!!! The command has failed after $n attempts !!!"
			fi
		}
	done
}

retry_long() {
	local n=1
	# retry for 5 minutes at 5-second intervals
	local max=60
	local delay=5
	while true; do
		"$@" && break || {
			if [[ $n -lt $max ]]; then
				((n++))
				echo "!!! Command failed. Attempt $n/$max; sleeping for ${delay}s !!!"
				sleep $delay;
			else
				fail "!!! The command has failed after $n attempts !!!"
			fi
		}
	done
}

cleanBoot() {
	if [ -f ${MY_HOME}/.execute_onstart ]; then
		rm -rf ${MY_HOME}/.execute_onstart
	fi
	if [ -f ${MY_HOME}/.onstart ]; then
		rm -rf ${MY_HOME}/.onstart
	fi
#	if [ -f ${MY_HOME}/.bash_profile ]; then
#		mv ${MY_HOME}/.bash_profile ${MY_HOME}/.bash_profile.disabled
#	fi

	if [ -f ${MY_HOME}/.profile ]; then
		sed -i '/\. ~\/\.execute_onstart/d' ${MY_HOME}/.profile
	fi

	reloadEnvironment
	#echo "PATH=${PATH}" >> ${MY_HOME}/.bashrc
	echo ". ${MY_HOME}/.profile" > ${MY_HOME}/.bashrc
}

reloadEnvironment() {
	source /etc/profile
	source ${MY_HOME}/.profile
}

